{"version":3,"sources":["FAI_Slider.js","sequencer/components/PlayHead.js","sequencer/constants/config.js","sequencer/hooks/useStore.js","sequencer/utils/Sound.js","sequencer/hooks/useSound.js","sequencer/components/Note.js","sequencer/components/Track.js","sequencer/components/TrackList.js","sequencer/components/Toolbar.js","sequencer/components/Steps.js","sequencer/hooks/useStyles.js","sequencer/hooks/useTimer.js","sequencer/Sequencer.js","utils.js","components/SoundVisualizer.js","img/1600px-Logo_KIT.png","img/refresh_icon.svg","D3/Scatterplot.js","App.js","serviceWorker.js","index.js"],"names":["EffectSlider","props","context","handleChangeComplete","event","effect","handleOnChange","state","value","sound","this","className","orientation","onChange","onChangeComplete","Component","PlayHead","notesAreaWidthInPixels","timePerSequence","totalLapsedTime","useRef","useLayoutEffect","progress","Math","min","current","style","transform","toFixed","ref","memo","sequenceList","id","title","noteCount","trackList","soundFile","onNotes","Context","createContext","sequence","toggleNote","selectSequence","appReducer","action","type","find","seq","newTrackList","map","track","trackID","Provider","children","useReducer","dispatch","newOnNotes","stepID","indexOf","filter","col","sequenceID","Sound","path","base64ToArrayBuffer","base64","binary_string","window","atob","len","length","bytes","Uint8Array","i","charCodeAt","buffer","isSafari","navigator","userAgent","match","document","body","webkitFilter","AudioContext","webkitAudioContext","MozAudioContext","audioContext","isSafariFixed","boundSafariFix","safariFix","bind","addEventListener","loadSound","removeEventListener","createBuffer","source","createBufferSource","connect","destination","start","a","recorderNode","createGain","gain","arrayBuffer","console","log","decodeAudioDataAsync","Promise","resolve","reject","decodeAudioData","e","gainValue","rateValue","resume","playbackRate","useSound","soundFilePath","useState","play","setSound","useCallback","useEffect","Note","isNoteOn","isNoteOnCurrentStep","useContext","noteClassNames","classNames","onClick","target","classList","toggle","Track","currentStepID","notes","Array","el","key","TrackList","base64Sound","content","ToolBar","setStartTime","setPastLapse","setBPM","isSequencePlaying","startTime","BPM","selectedSequenceID","aria-label","width","height","viewBox","x","y","l","performance","now","data-state","d","htmlFor","Steps","count","defaults","noteWidthFull","__note_width","__note_margin_horz","noteHeightFull","__note_height","__note_margin_vert","getNotesAreaWidthInPixels","totalSteps","__play_head_width","setProperty","documentElement","useStyles","__number_of_steps","__app_visibility","__color_bg","__color_fg","__color_black","__color_dark_grey","__color_light_grey","__color_highlight","__base_font_size","__number_of_tracks","__grid_unit","__form_element_height","__input_bpm_width","__step_height","__track_title_width","__note_border_size","setStyles","useTimer","running","setNow","requestAnimationFrame","cancelAnimationFrame","Sequencer","pastLapsedTime","stepsPerBar","setCurrentStep","beatsPerBar","timePerStep","playerTime","max","floor","toolBarProps","playHeadProps","trackListProps","getDateString","timestamp","tmp","Date","parseInt","getDate","getMonth","getFullYear","getHours","getMinutes","SoundVisualizer","visualizations","Accordion","Toggle","as","Button","variant","eventKey","Collapse","Carousel","v","Item","name","Image","src","base64img","rounded","React","BarChart","baseStyle","flex","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","color","outline","transition","activeStyle","acceptStyle","rejectStyle","StyledDropzone","useDropzone","accept","onDrop","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","useMemo","App","keyMap","SPACE","ENTER","SEQUENCER","particles_config","num","rps","radius","life","tha","alpha","scale","position","cross","random","g","onParticleUpdate","ctx","particle","beginPath","rect","p","fillStyle","fill","closePath","loadingTextArray","storeDropContent","acceptedFiles","reader","FileReader","readAsDataURL","that","onloadend","base64stuff","result","replace","setState","files","fetch","headers","method","JSON","stringify","data","then","response","json","isReadyForGeneration","isUploadSuccessful","scatterMarkerClick","chartContext","seriesIndex","dataPointIndex","config","series","point","selectedPoint","onGenerate","isLoading","model","model_instrument","ae_variance","getTime","snd","Audio","processedSound","isReadyForPostprocessing","particlesColor","changeParticlesColor","handleVisualization","getHistoryList","downloadStuff","byteCharacters","byteNumbers","byteArray","file","Blob","element","createElement","href","URL","createObjectURL","download","appendChild","click","alert","playOriginalSound","playStuff","handleCancelClick","handleAnotherUpload","handleHotKeySpace","handleHotKeySequencer","sequencerProps","handleHotKeyEnter","loadSimilarityModelInBackend","clearInterval","timeout","isLoadingModel","isSimilaritySearch","loadModelInBackend","v_model","v_model_instrument","handleDropdownVAE","isGAN","setInterval","currentIdx","loadingTextIdx","handleSimilaritySearch","handleRandom","random_boolean","v_distortion_value","v_reverb_value","v_highpass_value","v_lowpass_value","distortion_value","reverb_value","highpass_value","lowpass_value","isReversed","isBookmarked","postEffectsUpdate","handleDropdownInstrument","handleDropdownPresets","volume_value","handleReverseSound","visualization","getBookmarkData","getHistoryData","handleBookmark","getBookmarksList","handleScatterClick","colors","tmp_bookmarks","sort","b","bookmarks","tmp_history","history","handleChangeAEVariance","pastLapse","myRef","createRef","isAE","isDDSP","playing","volumeSliderValue","options","chart","toolbar","show","zoom","enabled","events","markerClick","xaxis","tickAmount","labels","formatter","val","parseFloat","yaxis","bookmark_btn_class","bookmark_btn_text","reversed_btn_class","reversed_btn_text","loadingText","Container","handlers","Row","Col","Logo","Dropdown","block","Menu","align","bg","Fragment","class","role","dataPointSelection","step","disabled","marginTop","_id","instrument","Badge","bookmark","RefreshLogo","Boolean","location","hostname","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0201f51d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Slider from 'react-rangeslider';\nimport 'react-rangeslider/lib/index.css';\nimport './App.css';\n\nclass EffectSlider extends Component {\n  constructor(props, context) {\n    super(props, context)\n    this.state = {\n      value: props.value,\n      sound: null,\n      effect: \"\"\n    }\n  }\n\n  handleChangeComplete = (event) => {\n    this.props.handleChangeComplete(event,this.props.effect)\n  }\n\n  handleOnChange = (event) => {\n     this.props.handleOnChange(event,this.props.effect)\n  }\n\n  render() {\n    //console.log(this.props)\n    this.state.sound = this.props.sound\n    this.state.effect = this.props.effect\n\n    return (\n     <div className='slider-vertical'>\n      <Slider\n        value={this.props.value}\n        orientation=\"vertical\"\n        onChange={this.handleOnChange}\n        onChangeComplete={this.handleChangeComplete}\n      />\n      </div>\n    )\n  }\n}\n\n  export default EffectSlider;","import React, { useRef, useLayoutEffect, memo } from 'react'\nimport './PlayHead.css'\n\nconst PlayHead = ({\n    notesAreaWidthInPixels,\n    timePerSequence,\n    totalLapsedTime\n}) => {\n    const PlayHead = useRef(null)\n\n    useLayoutEffect(() => {\n        let progress = Math.min((totalLapsedTime % timePerSequence) / timePerSequence, 1)\n\n        PlayHead.current.style.transform = 'translate3d(' + (progress * notesAreaWidthInPixels).toFixed(2) + 'px, 0, 0px)'\n    }, [notesAreaWidthInPixels, timePerSequence, totalLapsedTime])\n\n    return (\n        <div className=\"play_head\" ref={PlayHead}></div>\n    )\n}\n\nexport default memo(PlayHead)\n","const sequenceList = [\n    {\n        id: 0,\n        title: '4-on-the-Floor',\n        noteCount: 16,\n        trackList: [\n            {\n                title: 'Your Sound',\n                soundFile: 'whatever',\n                onNotes: [0, 2, 4, 6, 8, 10, 12, 14],\n            }\n        ]\n    }\n]\n\nconst soundFiles = {\n    'kick': '/sounds/kick.wav'\n}\n\nexport { sequenceList, soundFiles }\n","import React, { useReducer, createContext } from 'react'\nimport { sequenceList } from '../constants/config'\n\nconst Context = createContext({\n    sequence: {},\n    toggleNote: () => { },\n    selectSequence: () => { },\n})\n\nconst appReducer = (state, action) => {\n    switch (action.type) {\n        case 'SET_SEQUENCE':\n            return {\n                ...sequenceList.find(seq => seq.id === action.value)\n            }\n        case 'SET_ON_NOTES':\n            let newTrackList = state.trackList.map((track, trackID) => {\n                if (action.trackID === trackID) {\n                    return {\n                        ...track,\n                        onNotes: action.value\n                    }\n                } else {\n                    return track\n                }\n            })\n            return {\n                ...state,\n                trackList: newTrackList\n            }\n        default:\n            return state\n    }\n}\n\nconst Provider = ({ children }) => {\n    const [sequence, dispatch] = useReducer(appReducer, { ...sequenceList[0] })\n\n    const toggleNote = ({ trackID, stepID }) => {\n        let newOnNotes\n        const onNotes = sequence.trackList[trackID].onNotes\n\n        if (onNotes.indexOf(stepID) === -1) {\n            newOnNotes = [...onNotes, stepID]\n        } else {\n            newOnNotes = onNotes.filter(col => col !== stepID)\n        }\n        dispatch({\n            type: 'SET_ON_NOTES',\n            value: newOnNotes,\n            trackID\n        })\n    }\n\n    const selectSequence = (sequenceID) => {\n        dispatch({\n            type: 'SET_SEQUENCE',\n            value: sequenceID,\n        })\n    }\n\n    return (\n        <Context.Provider value={{ sequence, toggleNote, selectSequence }}>\n            {children}\n        </Context.Provider>\n    )\n}\n\nexport {\n    Provider,\n    Context\n}\n","class Sound {\n\n    constructor(path) {\n        const isSafari = !!navigator.userAgent.match(/safari/i) && !navigator.userAgent.match(/chrome/i) && typeof document.body.style.webkitFilter !== \"undefined\"\n        const AudioContext = window.AudioContext || window.webkitAudioContext || window.MozAudioContext\n        this.audioContext = new AudioContext()\n        if (isSafari) {\n            this.isSafariFixed = false\n            this.boundSafariFix = this.safariFix.bind(this)\n            window.addEventListener('click', this.boundSafariFix, false)\n        }\n        if (!this.buffer) this.loadSound(path)\n    }\n\n    safariFix() {\n        if (this.isSafariFixed) {\n            window.removeEventListener('click', this.boundSafariFix, false)\n            return\n        }\n        // create empty buffer, connect to speakers and play the file\n        var buffer = this.audioContext.createBuffer(1, 1, 22050)\n        var source = this.audioContext.createBufferSource()\n        source.buffer = buffer\n        source.connect(this.audioContext.destination)\n        source.start(0)\n        this.isSafariFixed = true\n    }\n\n    base64ToArrayBuffer = (base64) => {\n        const binary_string = window.atob(base64);\n        let len = binary_string.length;\n        let bytes = new Uint8Array(len);\n        for (let i = 0; i < len; i++) {\n            bytes[i] = binary_string.charCodeAt(i);\n        }\n        return bytes.buffer;\n    }\n\n    async loadSound(path) {\n        this.recorderNode = this.audioContext.createGain()\n        this.recorderNode.gain.value = 1\n        this.buffer = null\n        this.path = path\n        //const response = await fetch(path)\n        //const arrayBuffer = await response.arrayBuffer()\n        const arrayBuffer = this.base64ToArrayBuffer(path);\n        console.log(typeof arrayBuffer);\n        this.buffer = await this.decodeAudioDataAsync(\n            this.audioContext, arrayBuffer\n        )\n    }\n\n    decodeAudioDataAsync(audioContext, arrayBuffer) {\n        return new Promise((resolve, reject) => {\n            audioContext.decodeAudioData(\n                arrayBuffer,\n                buffer => resolve(buffer),\n                e => reject(e)\n            )\n        })\n    }\n\n    play(gainValue = 1, rateValue = 1) {\n        this.audioContext.resume()\n        const gain = this.audioContext.createGain()\n        const sound = this.audioContext.createBufferSource()\n        gain.gain.value = gainValue\n        sound.playbackRate.value = rateValue\n        sound.buffer = this.buffer\n        sound.connect(gain)\n        gain.connect(this.recorderNode)\n        gain.connect(this.audioContext.destination)\n        sound.start(0)\n    }\n}\n\nexport default Sound\n","import { useState, useEffect, useCallback } from 'react'\nimport Sound from '../utils/Sound'\n\nconst useSound = (soundFilePath) => {\n    const [sound, setSound] = useState({ play: () => { } })\n    const play = useCallback(() => sound.play(), [sound])\n\n    useEffect(() => {\n        setSound(new Sound(soundFilePath))\n\n    }, [soundFilePath])\n\n    return [play]\n}\n\nexport default useSound\n","import React, { useContext, useEffect, memo } from 'react'\nimport classNames from 'classnames'\nimport { Context } from '../hooks/useStore'\nimport './Note.css'\n\nconst Note = ({\n    trackID,\n    stepID,\n    isNoteOn,\n    isNoteOnCurrentStep,\n    play\n}) => {\n\n    const { toggleNote } = useContext(Context)\n    const noteClassNames = classNames('note', {\n        'on': isNoteOn,\n        'playing': isNoteOn && isNoteOnCurrentStep\n    })\n\n    useEffect(() => {\n        if (isNoteOn && isNoteOnCurrentStep) {\n            play()\n        }\n\n    }, [isNoteOn, isNoteOnCurrentStep, play])\n\n    const noteClicked = e => {\n        e.target.classList.toggle('on')\n        toggleNote({ trackID, stepID })\n        play()\n    }\n\n    return (\n        <div\n            className={noteClassNames}\n            onClick={noteClicked}\n        />\n    )\n}\n\nexport default memo(Note)\n","import React, { memo } from 'react'\nimport useSound from '../hooks/useSound'\nimport Note from './Note'\nimport './Track.css'\n\nconst Track = ({\n    trackID,\n    currentStepID,\n    title,\n    noteCount,\n    onNotes,\n    soundFilePath,\n}) => {\n    const [play] = useSound(soundFilePath)\n    \n    const notes = [...Array(noteCount)].map((el, i) => {\n        const isNoteOn = onNotes.indexOf(i) !== -1\n        const isNoteOnCurrentStep = currentStepID === i\n        const stepID = i\n\n        return (\n            <Note\n                key={i}\n                trackID={trackID}\n                stepID={stepID}\n                isNoteOn={isNoteOn}\n                isNoteOnCurrentStep={isNoteOnCurrentStep}\n                play={play}\n            />\n        )\n    })\n\n    return (\n        <div className=\"track\">\n            <header className=\"track_title\">{title}</header>\n            <main className=\"track_notes\">\n                {notes}\n            </main>\n        </div>\n    )\n}\n\nexport default memo(Track)\n","import React, { useContext, memo } from 'react'\nimport { Context } from '../hooks/useStore'\nimport { soundFiles } from '../constants/config'\nimport Track from './Track'\nimport './Track.css'\n\nconst TrackList = ({ currentStepID, base64Sound }) => {\n    const { sequence: { trackList, noteCount } } = useContext(Context)\n    const content = trackList.map((track, trackID) => {\n        const { title, onNotes, soundFile } = track;\n\n        return (\n            <Track\n                key={title}\n                trackID={+trackID}\n                currentStepID={currentStepID}\n                title={title}\n                noteCount={noteCount}\n                onNotes={onNotes}\n                soundFilePath={base64Sound}\n            />\n        )\n    })\n\n    return (\n        <div className=\"track-list\">\n            {content}\n        </div>\n    )\n}\n\nexport default memo(TrackList)\n\n","import React, { useContext, memo } from 'react'\nimport { sequenceList } from '../constants/config'\nimport { Context } from '../hooks/useStore'\nimport './Toolbar.css'\n\nconst ToolBar = ({\n    setStartTime,\n    setPastLapse,\n    setBPM,\n    isSequencePlaying,\n    startTime,\n    BPM\n}) => {\n    const { sequence: { id: selectedSequenceID }, selectSequence } = useContext(Context)\n\n    function togglePlayback() {\n        if (isSequencePlaying) {\n            setPastLapse(l => l + performance.now() - startTime)\n            setStartTime(null)\n        } else {\n            setStartTime(performance.now())\n        }\n    }\n\n    function stopPlayback() {\n        setPastLapse(0)\n        setStartTime(null)\n    }\n\n    function updateBPM(e) {\n        setBPM(e.target.value)\n    }\n\n    return (\n        <nav className=\"toolbar\">\n            <button className=\"form_element button_stop\" onClick={stopPlayback} aria-label=\"Stop\">\n                <svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\">\n                    <rect className=\"button_icon_path\" x=\"2\" y=\"2\" width=\"10\" height=\"10\" />\n                </svg>\n\n            </button>\n            <button className=\"form_element button_play_pause\" onClick={togglePlayback} aria-label=\"Play / Pause\">\n                <svg width=\"14\" height=\"14\" viewBox=\"8 8 20 20\">\n                    {isSequencePlaying && <path className=\"button_icon_path\" id=\"pause-icon\" data-state=\"playing\" d=\"M11,10 L17,10 17,26 11,26 M20,10 L26,10 26,26 20,26\" />}\n                    {!isSequencePlaying && <path className=\"button_icon_path\" id=\"play-icon\" data-state=\"paused\" d=\"M11,10 L18,13.74 18,22.28 11,26 M18,13.74 L26,18 26,18 18,22.28\" />}\n                </svg>\n            </button>\n            <input className=\"form_element input_bpm\" id=\"bpm\" type=\"text\" value={BPM} onChange={updateBPM} />\n            <label className=\"label_bpm\" htmlFor=\"bpm\">BPM</label>\n            <select\n                className=\"form_element select_sequence\"\n                value={selectedSequenceID}\n                onChange={e => selectSequence(+e.target.value)}\n                aria-label=\"Select sequence\"\n            >\n                {\n                    sequenceList.map(seq => {\n                        return (\n                            <option\n                                key={seq.id}\n                                value={seq.id}\n                            >\n                                {seq.title}\n                            </option>\n                        )\n                    })\n                }\n            </select>\n        </nav>\n    )\n}\n\nexport default memo(ToolBar)\n","import React from 'react'\nimport './Steps.css'\n\nconst Steps = ({ count = 0 }) => {\n    let content = [...Array(count)].map((el, i) => <div className=\"step\" key={i + 1}>{i + 1}</div>)\n\n    return (\n        <div className=\"steps\">\n            {content}\n        </div>\n    )\n}\n\nexport default Steps\n\n","import { useEffect } from 'react'\n\nconst defaults = {\n    '__app_visibility'     : 'visible',\n    '__color_bg'           : '#505050',\n    '__color_fg'           : '#f5f5f5',\n    '__color_black'        : '#000',\n    '__color_dark_grey'    : '#2e2e2e',\n    '__color_light_grey'   : '#5d5d5d',\n    '__color_highlight'    : '#37e147',\n    '__base_font_size'     : 12,\n    '__number_of_steps'    : 16,\n    '__number_of_tracks'   : 4,\n    '__grid_unit'          : 2,\n    '__play_head_width'    : 2,\n    '__form_element_height': 30,\n    '__input_bpm_width'    : 45,\n    '__step_height'        : 32,\n    '__track_title_width'  : 120,\n    '__note_width'         : 32,\n    '__note_height'        : 49,\n    '__note_border_size'   : 1,\n    '__note_margin_vert'   : 5,\n    '__note_margin_horz'   : 4,\n}\n\nconst noteWidthFull = defaults.__note_width + defaults.__note_margin_horz * 2\nconst noteHeightFull = defaults.__note_height + defaults.__note_margin_vert * 2\n\nconst getNotesAreaWidthInPixels = (totalSteps) => noteWidthFull * totalSteps - (defaults.__play_head_width / 2)\n\nconst setProperty = (key, value) => document.documentElement.style.setProperty(key, value)\n\nconst setStyles = (totalSteps) => {\n    defaults.__number_of_steps = totalSteps\n    setProperty('--app-visibility', defaults.__app_visibility)\n    setProperty('--color-bg', defaults.__color_bg)\n    setProperty('--color-fg', defaults.__color_fg)\n    setProperty('--color-black', defaults.__color_black)\n    setProperty('--color-dark-grey', defaults.__color_dark_grey)\n    setProperty('--color-light-grey', defaults.__color_light_grey)\n    setProperty('--color-highlight', defaults.__color_highlight)\n    setProperty('--base-font-size', defaults.__base_font_size + 'px')\n    setProperty('--number-of-steps', defaults.__number_of_steps)\n    setProperty('--play-head-width', defaults.__play_head_width + 'px')\n    setProperty('--play-head-height', noteHeightFull * defaults.__number_of_tracks - (defaults.__note_margin_vert * 2) + 'px')\n    setProperty('--spacer', defaults.__grid_unit * 5 + 'px')\n    setProperty('--form-element-height', defaults.__form_element_height + 'px')\n    setProperty('--button-pause-play-width', defaults.__form_element_height + 'px')\n    setProperty('--input-bpm-width', defaults.__input_bpm_width + 'px')\n    setProperty('--step-height', defaults.__step_height + 'px')\n    setProperty('--track-title-width', defaults.__track_title_width + 'px')\n    setProperty('--note-border-size', defaults.__note_border_size + 'px')\n    setProperty('--note-width', defaults.__note_width + 'px')\n    setProperty('--note-height', defaults.__note_height + 'px')\n    setProperty('--note-margin-vert', defaults.__note_margin_vert + 'px')\n    setProperty('--note-margin-horz', defaults.__note_margin_horz + 'px')\n    setProperty('--note-width-full', noteWidthFull + 'px')\n    setProperty('--left-gutter-size', defaults.__track_title_width + defaults.__grid_unit * 5 * 2 + 'px')\n    setProperty('--all-note-widths', (noteWidthFull) * defaults.__number_of_steps + 'px')\n    setProperty('--app-max-width', (defaults.__track_title_width + defaults.__grid_unit * 5 * 2) + ((defaults.__note_width + defaults.__note_margin_horz * 2) * defaults.__number_of_steps) + 'px')\n}\n\nconst useStyles = (totalSteps) => {\n    useEffect(() => {\n        setStyles(totalSteps)\n    }, [totalSteps])\n    return [getNotesAreaWidthInPixels]\n}\n\nexport default useStyles\n","import { useState, useLayoutEffect } from 'react'\n\nconst useTimer = (running) => {\n    const [now, setNow] = useState(null)\n\n    useLayoutEffect(() => {\n        if (!running) {\n            return\n        }\n\n        const id = requestAnimationFrame(() => setNow(performance.now()))\n\n        return () => cancelAnimationFrame(id)\n\n    }, [running, now])\n\n    return running ? now : null\n\n}\n\nexport default useTimer\n","import React, { useState, useEffect } from 'react'\nimport ToolBar from './components/Toolbar'\nimport Steps from './components/Steps'\nimport TrackList from './components/TrackList'\nimport PlayHead from './components/PlayHead'\nimport { Provider } from './hooks/useStore'\nimport useTimer from './hooks/useTimer'\nimport useStyles from './hooks/useStyles'\nimport './Sequencer.css'\n\nfunction Sequencer({ base64Sound, startTime, pastLapsedTime, BPM,\n                     setStartTime, setPastLapse, setBPM }) {\n\n    const baseBPMPerOneSecond = 60\n    const stepsPerBar = 8\n    const beatsPerBar = 4\n    const barsPerSequence = 2\n    const totalSteps = stepsPerBar * barsPerSequence\n    const totalBeats = beatsPerBar * barsPerSequence\n\n    //const [BPM, setBPM] = useState(120)\n    //const [startTime, setStartTime] = useState(null)\n    //const [pastLapsedTime, setPastLapse] = useState(0)\n    const [currentStepID, setCurrentStep] = useState(null)\n    const [getNotesAreaWidthInPixels] = useStyles(totalSteps)\n\n    const notesAreaWidthInPixels = getNotesAreaWidthInPixels(totalSteps)\n    const timePerSequence = baseBPMPerOneSecond / BPM * 1000 * totalBeats\n    const timePerStep = timePerSequence / totalSteps\n    const isSequencePlaying = startTime !== null\n    const playerTime = useTimer(isSequencePlaying)\n    const lapsedTime = isSequencePlaying ? Math.max(0, playerTime - startTime) : 0\n    const totalLapsedTime = pastLapsedTime + lapsedTime\n\n    useEffect(() => {\n        if (isSequencePlaying) {\n            setCurrentStep(Math.floor(totalLapsedTime / timePerStep) % totalSteps)\n        } else {\n            setCurrentStep(null)\n        }\n    }, [isSequencePlaying, timePerStep, totalLapsedTime, totalSteps])\n\n    const toolBarProps = {\n        setStartTime,\n        setPastLapse,\n        setBPM,\n        isSequencePlaying,\n        startTime,\n        BPM\n    }\n\n    const playHeadProps = {\n        notesAreaWidthInPixels,\n        timePerSequence,\n        totalLapsedTime\n    }\n\n    const trackListProps = {\n        currentStepID\n    }\n\n    return (\n        <Provider>\n            <main className=\"app\">\n                <header className=\"app_header\">\n                    <h1 className=\"app_title\"></h1>\n                    <ToolBar {...toolBarProps} />\n                </header>\n                <Steps count={totalSteps} />\n                <div className=\"app_content\">\n                    <PlayHead {...playHeadProps} />\n                    <TrackList\n                        base64Sound={base64Sound}\n                        currentStepID={trackListProps.currentStepID}\n                    />\n                </div>\n            </main >\n        </Provider>\n    )\n}\n\nexport default Sequencer;\n","const getDateString = (timestamp) => {\n    const tmp = new Date(parseInt(timestamp));\n    return tmp.getDate() + \".\" + (tmp.getMonth() + 1) + \".\" + tmp.getFullYear() + \" \"\n            + tmp.getHours() + \":\" + tmp.getMinutes();\n}\n\nexport default {};\nexport {getDateString};\n","import React from \"react\";\nimport Image from \"react-bootstrap/Image\";\nimport Button from \"react-bootstrap/Button\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport Accordion from \"react-bootstrap/Accordion\";\n\nimport \"../stylesheets/SoundVisualizer.css\";\n\n\nclass SoundVisualizer extends React.Component {\n    render() {\n        if (!this.props.visualizations || this.props.visualizations.length === 0) {\n            return null;\n        }\n\n        return (\n               <Accordion style={{\"text-align\": \"center\"}}>\n                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                    Show Visualizer\n                </Accordion.Toggle>\n                <Accordion.Collapse eventKey=\"0\">\n                    <Carousel>\n                        {this.props.visualizations.map(v =>\n                            <Carousel.Item>\n                                <h3>{v.name}</h3>\n                                <Image style={{\"width\": \"80%\", \"height\": \"auto\"}} src={'data:image/png;base64,' + v.base64img} rounded/>\n                            </Carousel.Item>\n                        )}\n                    </Carousel>\n                </Accordion.Collapse>\n            </Accordion>\n        )\n    }\n}\n\nexport default SoundVisualizer;\n","export default __webpack_public_path__ + \"static/media/1600px-Logo_KIT.6ba029f8.png\";","export default __webpack_public_path__ + \"static/media/refresh_icon.d18b1ef2.svg\";","import React from 'react';\nimport * as d3 from 'd3';\nimport { useD3 } from './useD3.js';\n\nfunction BarChart({ data }) {\n  const ref = useD3(\n    (svg) => {\n      const height = 500;\n      const width = 500;\n      const margin = { top: 20, right: 30, bottom: 30, left: 40 };\n\n      const x = d3\n        .scaleBand()\n        .domain(data.map((d) => d.year))\n        .rangeRound([margin.left, width - margin.right])\n        .padding(0.1);\n\n      const y1 = d3\n        .scaleLinear()\n        .domain([0, d3.max(data, (d) => d.sales)])\n        .rangeRound([height - margin.bottom, margin.top]);\n\n      const xAxis = (g) =>\n        g.attr(\"transform\", `translate(0,${height - margin.bottom})`).call(\n          d3\n            .axisBottom(x)\n            .tickValues(\n              d3\n                .ticks(...d3.extent(x.domain()), width / 40)\n                .filter((v) => x(v) !== undefined)\n            )\n            .tickSizeOuter(0)\n        );\n\n      const y1Axis = (g) =>\n        g\n          .attr(\"transform\", `translate(${margin.left},0)`)\n          .style(\"color\", \"steelblue\")\n          .call(d3.axisLeft(y1).ticks(null, \"s\"))\n          .call((g) => g.select(\".domain\").remove())\n          .call((g) =>\n            g\n              .append(\"text\")\n              .attr(\"x\", -margin.left)\n              .attr(\"y\", 10)\n              .attr(\"fill\", \"currentColor\")\n              .attr(\"text-anchor\", \"start\")\n              .text(data.y1)\n          );\n\n      svg.select(\".x-axis\").call(xAxis);\n      svg.select(\".y-axis\").call(y1Axis);\n\n      svg\n        .select(\".plot-area\")\n        .attr(\"fill\", \"steelblue\")\n        .selectAll(\".bar\")\n        .data(data)\n        .join(\"rect\")\n        .attr(\"class\", \"bar\")\n        .attr(\"x\", (d) => x(d.year))\n        .attr(\"width\", x.bandwidth())\n        .attr(\"y\", (d) => y1(d.sales))\n        .attr(\"height\", (d) => y1(0) - y1(d.sales));\n    },\n    [data.length]\n  );\n\n  return (\n    <svg\n      ref={ref}\n      style={{\n        height: 500,\n        width: \"100%\",\n        marginRight: \"0px\",\n        marginLeft: \"0px\",\n      }}\n    >\n      <g className=\"plot-area\" />\n      <g className=\"x-axis\" />\n      <g className=\"y-axis\" />\n    </svg>\n  );\n}\n\nexport default BarChart;","import React, { Component, useMemo,  useState } from 'react';\nimport './App.css';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Image from 'react-bootstrap/Image';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {useDropzone} from 'react-dropzone';\nimport SoundEffectWrapper from './SoundEffectWrapper';\nimport EffectSlider from './FAI_Slider';\nimport Slider from 'react-rangeslider';\nimport * as Tone from 'tone';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { HotKeys, GlobalHotKeys, ObserveKeys, getApplicationKeyMap } from 'react-hotkeys';\nimport Badge from 'react-bootstrap/Badge';\nimport PlayHead from \"./sequencer/components/PlayHead\";\nimport TrackList from \"./sequencer/components/TrackList\";\nimport ToolBar from \"./sequencer/components/Toolbar\";\nimport Steps from \"./sequencer/components/Steps\";\nimport useStyles from \"./sequencer/hooks/useStyles\";\nimport Sequencer from \"./sequencer/Sequencer\";\nimport {getDateString} from \"./utils\";\nimport SoundVisualizer from \"./components/SoundVisualizer\";\nimport ParticlesBg from 'particles-bg';\nimport Logo from \"./img/1600px-Logo_KIT.png\";\nimport RefreshLogo from \"./img/refresh_icon.svg\";\nimport * as d3 from 'd3';\nimport BarChart from './D3/Scatterplot.js';\n//import ReactApexChart from 'apexcharts';\nimport Chart from \"react-apexcharts\";\nimport Form from 'react-bootstrap/Form';\nimport Accordion from \"react-bootstrap/Accordion\";\n\n//const D3_test_data = []\n\nconst baseStyle = {\n  flex: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  padding: '20px',\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: '#eeeeee',\n  borderStyle: 'dashed',\n  backgroundColor: '#fafafa',\n  color: '#bdbdbd',\n  outline: 'none',\n  transition: 'border .24s ease-in-out'\n};\n\nconst activeStyle = {\n  borderColor: '#2196f3'\n};\n\nconst acceptStyle = {\n  borderColor: '#00e676'\n};\n\nconst rejectStyle = {\n  borderColor: '#ff1744'\n};\n\n\n\n\nfunction StyledDropzone(props) {\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject\n  } = useDropzone({accept: 'audio/wav', onDrop: props.onDrop});\n\n  const style = useMemo(() => ({\n    ...baseStyle,\n    ...(isDragActive ? activeStyle : {}),\n    ...(isDragAccept ? acceptStyle : {}),\n    ...(isDragReject ? rejectStyle : {})\n  }), [\n    isDragActive,\n    isDragReject,\n    isDragAccept\n  ]);\n\n  return (\n    <div className=\"container\">\n      <div {...getRootProps({style})}>\n        <input {...getInputProps()} />\n        <p>Drag 'n' drop some files here, or click to select files</p>\n      </div>\n    </div>\n  );\n}\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.myRef = React.createRef();\n\n    this.state = {\n      isLoading: false,\n      isGAN: true,\n      isLoadingModel: false,\n      isReadyForGeneration: false,\n      isReadyForPostprocessing: false,\n      loadingTextIdx: 0,\n      isAE: false,\n      isDDSP: false,\n      isBookmarked: false,\n      isSimilaritySearch: false,\n      isUploadSuccessful: false,\n      bookmarks: [],\n      history: [],\n      playing: false,\n      isReversed: false,\n      model: \"Model Selection\",\n      model_instrument: \"Instrument\",\n      result: \"idd\",\n      selectedPoint: null,\n      visualizations: null,\n      files: \"\",\n      sound: null,\n      processedSound: null,\n      volumeSliderValue: 100,\n      distortion_value: 0,\n      particlesColor: \"#a9a9a9\",\n      reverb_value: 0,\n      volume_value: 100,\n      lowpass_value: 100,\n      highpass_value: 0,\n      ae_variance: 0,\n      sequencerProps: {\n        startTime: null,\n        pastLapsedTime: 0,\n        BPM: 120,\n        setBPM: 120,\n        currentStepID: null,\n        totalSteps: 16\n      },\n      series: [{\n              name: \"Autoencoder Claps\",\n              data: [{\n                    x: 34.7574,\n                    y: 37.994343,\n                    sound: \"clap2\"\n                }, {\n                    x: -31.031717,\n                    y: 10.498918,\n                    sound: \"clap3\"\n                }],\n            }],\n      options: {\n              chart: {\n                 toolbar: {\n                show: false},\n                type: 'scatter',\n                zoom: {\n                  enabled: true,\n                  type: 'xy'\n                },\n                events: {\n                  markerClick: this.scatterMarkerClick\n                }\n              },\n              xaxis: {\n                tickAmount: 10,\n                labels: {\n                  show: false,\n                  formatter: function(val) {\n                    return parseFloat(val).toFixed(1)\n                  }\n                }\n              },\n              yaxis: {\n                show: false,\n                tickAmount: 7\n              }\n            }\n    };\n  }\n\n  componentDidMount(){\n    this.getBookmarksList()\n    this.getHistoryList()\n  }\n\n  keyMap = {\n      SPACE: \"space\",\n      ENTER: \"enter\",\n      SEQUENCER: \"s\"\n  };\n\n  particles_config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-40, 40],\n      // body: \"./img/icon.png\", // Whether to render pictures\n      // rotate: [0, 20],\n      alpha: [0.6, 0],\n      scale: [1, 0.1],\n      position: \"center\", // all or center or {x:1,y:1,width:100,height:100}\n      color: [\"random\", \"#ff0000\"],\n      cross: \"dead\", // cross or bround\n      random: 15,  // or null,\n      g: 5,    // gravity\n      // f: [2, -1], // force\n      onParticleUpdate: (ctx, particle) => {\n          ctx.beginPath();\n          ctx.rect(particle.p.x, particle.p.y, particle.radius * 2, particle.radius * 2);\n          ctx.fillStyle = particle.color;\n          ctx.fill();\n          ctx.closePath();\n      }\n    };\n\n  loadingTextArray = [\"Loading your Model...\", \"This may take a while...\", \"You look good today!\", \"Did you drink enough water?\", \"It's not you. It's me.\", \"Help, I'm trapped in a loader!\",  \"Counting backwards from Infinity\", \"Don't Panic\"];\n\n  storeDropContent = (acceptedFiles) => {\n    var reader = new FileReader();\n    reader.readAsDataURL(acceptedFiles[0]);\n    var that = this;\n    reader.onloadend = function() {\n        /* reader.result contains based64 encoded stuff */\n        let base64stuff = reader.result.replace(/^data:.+;base64,/, '');\n        that.setState({files: base64stuff});\n\n        fetch('/upload',\n      {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify({\n          data: base64stuff,\n        })\n      })\n      .then(response => response.json())\n      .then(response => {\n         that.setState({\n            isReadyForGeneration: true,\n            isUploadSuccessful: true\n        })\n        console.log(response.result)\n        //console.log(snd)\n\n      });\n\n    }\n  }\n\n  scatterMarkerClick = (event, chartContext, { seriesIndex, dataPointIndex, config}) => {\n                            //console.log(dataPointIndex)\n                            //console.log(this.state.series)\n                            //console.log(this.state.series[0])\n                            //console.log(this.state.series[0].data[dataPointIndex])\n                            console.log(this.state.series[0].data[dataPointIndex].sound)\n                            var point = this.state.series[0].data[dataPointIndex].sound\n                            this.setState({ selectedPoint: point })\n\n                    }\n\n  onGenerate = (event) => {\n    this.setState({ isLoading: true });\n    fetch('/generate',\n      {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify({\n          data: this.state.files ? this.state.files : \"generated.wav\",\n          model: this.state.model,\n          model_instrument: this.state.model_instrument,\n          selectedPoint: this.state.selectedPoint,\n          ae_variance: this.state.ae_variance,\n          timestamp: new Date().getTime()\n        })\n      })\n      .then(response => response.json())\n      .then(response => {\n        var snd = new Audio(\"data:audio/wav;base64,\" + response.result);\n        this.setState({\n          result: response.result,\n          //visualizations: response.visualization,\n          sound: snd,\n          processedSound: snd,\n          isLoading: false,\n          isReadyForPostprocessing: true,\n          particlesColor: this.changeParticlesColor()\n        });\n        //console.log(this.state.sound)\n        //console.log(snd)\n        snd.play();\n        this.handleVisualization()\n        this.getHistoryList()\n      });\n  }\n\n  downloadStuff = () => {\n    if(!this.state.result) {\n      alert(\"Nothing to download you fool\");\n      return;\n    }\n        console.log(this.state.result)\n        //console.log(this.state.processedSound)\n        const sound = new Audio(\"data:audio/wav;base64,\" + this.state.result);\n        //var sound = this.state.result\n\n        //experiment\n        //var wavString = sound;\n        //var len = wavString.length;\n        //var buf = new ArrayBuffer(len);\n        //var view = new Uint8Array(buf);\n        //for (var i = 0; i < len; i++) {\n        //  view[i] = wavString.charCodeAt(i) & 0xff;\n        //}\n        //var blob = new Blob([view], {type: \"audio/wav\"});\n        //console.log(blob)\n        //const element = document.createElement(\"a\");\n        //element.href = URL.createObjectURL(sound);\n        //element.download = \"sound.wav\";\n        //document.body.appendChild(element);\n        //element.click();\n        //experiment\n\n        const byteCharacters = atob(this.state.result);\n        const byteNumbers = new Array(byteCharacters.length);\n        for (let i = 0; i < byteCharacters.length; i++) {\n          byteNumbers[i] = byteCharacters.charCodeAt(i);\n        }\n        const byteArray = new Uint8Array(byteNumbers);\n        const file = new Blob([byteArray], {type: 'audio/wav'});\n\n        const element = document.createElement(\"a\");\n        //const file = new Blob([sound], {type: 'audio/wav'});\n        element.href = URL.createObjectURL(file);\n        element.download = \"sound.wav\";\n        document.body.appendChild(element);\n        element.click();\n\n  }\n\n      playOriginalSound = () => {\n     fetch('/play',\n      {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify({\n          data: \"original\",\n          model: this.state.model,\n          model_instrument: this.state.model_instrument,\n          selectedPoint: this.state.selectedPoint,\n          ae_variance: this.state.ae_variance,\n          timestamp: new Date().getTime()\n        })\n      })\n      .then(response => response.json())\n      .then(response => {\n        const snd = new Audio(\"data:audio/wav;base64,\" + response.result);\n        snd.play();\n      });\n     }\n\n    playStuff = () => {\n     fetch('/play',\n      {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify({\n          data: this.state.files ? this.state.files : \"processed.wav\"\n        })\n      })\n      .then(response => response.json())\n      .then(response => {\n        const snd = new Audio(\"data:audio/wav;base64,\" + response.result);\n        this.setState({\n          result: response.result,\n          //visualizations: response.visualization,\n          processedSound: snd,\n          isLoading: false,\n        });\n\n        snd.play();\n        this.handleVisualization()\n      });\n     }\n    //if(this.state.playing) {\n    //  this.state.sound.pause();\n    //  this.setState({playing: false});\n    //} else {\n    //  if(this.state.sound) {\n    //    var that = this;\n    //    that.setState({playing: true});\n    //    that.state.sound.play();\n    //    this.state.sound.addEventListener(\"ended\", function() {\n    //      that.setState({playing: false});\n    //    });\n    //  }\n    //}\n  //}\n\n  handleCancelClick = (event) => {\n    this.setState({ result: \"\" });\n  }\n\n  handleAnotherUpload = (event) => {\n    this.setState({ isReadyForGeneration: false,\n                    isUploadSuccessful: false,\n                    isReadyForPostprocessing: false\n     });\n  }\n\n\n  handleHotKeySpace= () => {\n    console.log(\"Pressed Space!\")\n    this.playStuff()\n  }\n\n  handleHotKeySequencer= () => {\n    console.log(\"Pressed S!\")\n    let sequencerProps = this.state.sequencerProps\n    if (sequencerProps.startTime){\n        sequencerProps.startTime = null\n        sequencerProps.pastLapsedTime = 0\n    }else{\n    sequencerProps.startTime = performance.now()\n    }\n    this.setState({sequencerProps: sequencerProps})\n  }\n\n  handleHotKeyEnter= () => {\n    console.log(\"Pressed Enter!\")\n      this.onGenerate()\n  }\n\n  loadSimilarityModelInBackend = () => {\n\n    fetch('/similarity',\n      {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify({\n          data: \"similarity\",\n        })\n      })\n      .then(response => response.json())\n      .then(response => {\n        console.log(response.result)\n        clearInterval(this.timeout)\n        this.setState({\n          isLoadingModel: false,\n          isReadyForGeneration: true,\n          isSimilaritySearch: true,\n          isUploadSuccessful: false,\n          isReadyForPostprocessing: false,\n          isReadyForGeneration: false\n        });\n\n        //console.log(this.state.sound)\n        //console.log(snd)\n      });\n  }\n\n  loadModelInBackend = (v_model, v_model_instrument) => {\n\n    fetch('/tsne',\n      {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify({\n          data: \"tsne\",\n          model_instrument: v_model_instrument\n        })\n      })\n      .then(response => response.json())\n      .then(response => {\n        console.log(response.result)\n        this.setState({\n          series: response.result,\n          isLoadingModel: false,\n          isReadyForGeneration: true\n        });\n        clearInterval(this.timeout)\n        //console.log(this.state.sound)\n        //console.log(snd)\n      });\n  }\n\n  handleDropdownVAE = (event) => {\n    console.log(\"VAE\")\n    this.setState({model: \"Variational Autoencoder\" ,\n                   isGAN: false,\n                   isSimilaritySearch: false,\n                   isReadyForPostprocessing: false,\n                   isReadyForGeneration: false})\n\n    if (this.state.model_instrument !== \"Instrument\"){\n        //console.log(\"Ab jetzt eligible\")\n        this.timeout = setInterval(() => {\n          let currentIdx = this.state.loadingTextIdx;\n          this.setState({ loadingTextIdx: currentIdx + 1 });\n        }, 2500)\n\n         this.setState({\n            isLoadingModel: true\n        })\n\n        this.loadModelInBackend(event.target.id, this.state.model_instrument)\n\n        }\n\n  }\n\n  handleSimilaritySearch = (event) => {\n    console.log(\"Similarity Search\")\n    this.setState({model: \"Similarity Search\",\n                   isGAN: true\n                  })\n\n        this.timeout = setInterval(() => {\n          let currentIdx = this.state.loadingTextIdx;\n          this.setState({ loadingTextIdx: currentIdx + 1 });\n        }, 2500)\n\n\n\n\n         this.setState({\n            isLoadingModel: true\n        })\n\n        this.loadSimilarityModelInBackend()\n  }\n\n\n  handleRandom = (event) => {\n    console.log(\"Random Button\")\n    var random_boolean = Math.random() < 0.5;\n    var v_distortion_value = Math.floor(Math.random() * 101);\n    var v_reverb_value = Math.floor(Math.random() * 101);\n    var v_highpass_value = Math.floor(Math.random() * 101);\n    var v_lowpass_value = Math.floor(Math.random() * 101);\n\n    this.setState({\n    distortion_value: v_distortion_value,\n    reverb_value: v_reverb_value,\n    highpass_value: v_highpass_value,\n    lowpass_value: v_lowpass_value,\n    isReversed: random_boolean\n    })\n    this.setState({isBookmarked: false})\n    this.postEffectsUpdate(random_boolean, v_reverb_value, v_highpass_value, v_lowpass_value, v_distortion_value)\n  }\n\n  handleDropdownInstrument = (event) => {\n    console.log(event.target)\n    console.log(event.target.id)\n    this.setState({model_instrument: event.target.id,\n                   isReadyForPostprocessing: false,\n                   isReadyForGeneration: false})\n    console.log(this.state.model)\n\n    if (this.state.model != \"Model Selection\"){\n        //console.log(\"Ab jetzt eligible\")\n         this.timeout = setInterval(() => {\n          let currentIdx = this.state.loadingTextIdx;\n          this.setState({ loadingTextIdx: currentIdx + 1 });\n        }, 2500)\n        this.setState({\n            isLoadingModel: true\n        })\n        this.loadModelInBackend(this.state.model, event.target.id)\n\n        }\n\n  }\n\n  handleDropdownPresets = (event) => {\n    console.log(event.target.id)\n    fetch('/getMongoDBData',\n      {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify({id : event.target.id,\n                              type: \"presets\"\n        })\n      })\n      .then(response => response.json())\n      .then(response => {\n        //console.log(\"successfully generated Processed.wav file\")\n        console.log(response);\n        this.setState({\n            distortion_value: response.distortion_value,\n            reverb_value: response.reverb_value,\n            highpass_value: response.highpass_value,\n            lowpass_value: response.lowpass_value,\n            isReversed: response.isReversed,\n            volume_value: response.volume_value\n        })\n        this.setState({isBookmarked: false})\n        this.postEffectsUpdate()\n        //console.log(response.result)\n        //this.playStuff()\n      });\n  }\n\n  handleReverseSound = (event) => {\n    console.log(\"Handle Reverse\")\n    if(this.state.isReversed === false) {\n      console.log(\"New State: isReversed True\")\n      this.setState({isReversed: true })\n      this.postEffectsUpdate(true)\n    } else {\n      //we want to reverse\n      console.log(\"New State: isReversed False\")\n      this.setState({isReversed: false })\n      this.postEffectsUpdate(false)\n    }\n  }\n\n  handleVisualization = (event) => {\n    console.log(\"Handle Visualization\")\n    fetch('/getVisualization',\n      {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify({\n          data: \"visualization\"\n        })\n      })\n      .then(response => response.json())\n      .then(response => {\n        var snd = new Audio(\"data:audio/wav;base64,\" + response.result);\n        this.setState({\n          visualizations: response.visualization\n        });\n        //console.log(this.state.sound)\n        //console.log(snd)\n      });\n  }\n\n\n  getBookmarkData = (event) => {\n    console.log(\"Handle History could be bookmark or history\")\n    //EMRHN To be done so that it handles both, aber hier müsste auch schon die audio Datei dann kommen!\n\n    console.log(event.target.id)\n    console.log(event)\n\n    fetch('/getMongoDBData',\n      {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify({id : event.target.id,\n                              type: \"bookmark\"\n        })\n      })\n      .then(response => response.json())\n      .then(response => {\n        const snd = new Audio(\"data:audio/wav;base64,\" + response.result);\n        this.setState({\n            distortion_value: response.distortion_value,\n            reverb_value: response.reverb_value,\n            highpass_value: response.highpass_value,\n            lowpass_value: response.lowpass_value,\n            isReversed: response.isReversed,\n            volume_value: response.volume_value,\n             result: response.result,\n          //visualizations: response.visualization,\n          processedSound: snd,\n          isLoading: false,\n        })\n        snd.play();\n        this.setState({isBookmarked: false})\n        this.postEffectsUpdate()\n      });\n  }\n\n  getHistoryData = (event) => {\n    //EMRHN To be done so that it handles both, aber hier müsste auch schon die audio Datei dann kommen!\n    fetch('/getMongoDBData',\n      {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify({id : event.target.id,\n                              type: \"history\"\n        })\n      })\n      .then(response => response.json())\n      .then(response => {\n        //console.log(\"successfully generated Processed.wav file\")\n        console.log(response);\n\n        const snd = new Audio(\"data:audio/wav;base64,\" + response.result);\n        this.setState({\n          result: response.result,\n          //visualizations: response.visualization,\n          processedSound: snd,\n          isLoading: false,\n        });\n        snd.play();\n        console.log(\"Hat er nicht abgespielt? Das wäre doof.\")\n        this.handleVisualization()\n\n      });\n  }\n\n  handleBookmark = (event) => {\n    console.log(\"Bookmark\")\n    if(this.state.isBookmarked === false) {\n      //we want to bookmark it\n      console.log(\"New State: Bookmarked\")\n          fetch('/bookmark',\n      {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify({data : \"Bookmark_value\",\n                              volume_value: this.state.volume_value,\n                              distortion_value: this.state.distortion_value,\n                              reverb_value: this.state.reverb_value,\n                              highpass_value: this.state.highpass_value,\n                              lowpass_value: this.state.lowpass_value,\n                              isReversed: this.state.isReversed,\n                              model: this.state.model,\n                              model_instrument: this.state.model_instrument,\n                              timestamp: new Date().getTime()\n        })\n      })\n      .then(response => response.json())\n      .then(response => {\n        console.log(\"successfully wrote bookmark to database\")\n        //console.log(response.result)\n        //this.playStuff()\n      });\n      this.setState({isBookmarked : true })\n      this.getBookmarksList()\n\n    } else {\n      //we want to reverse bookmarking\n      console.log(\"New State: Not Bookmarked\")\n      this.setState({isBookmarked: false })\n    }\n   }\n\n   handleScatterClick = (event) => {\n    console.log(\"Scatter\")\n    console.log(event)\n\n    }\n\n   changeParticlesColor = () => {\n   var colors = [\"#0000ff\", \"#ff00ff\",\n                \"#ff0000\", \"#00ffff\",\n                \"#00ff00\"];\n\n   return colors[Math.floor(Math.random() * colors.length)];\n   }\n\n   getBookmarksList = () => {\n    fetch('/getMongoDBList',\n      {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify({type: \"bookmarks\"\n        })\n      })\n      .then(response => response.json())\n      .then(response => {\n        //console.log(\"successfully generated Processed.wav file\")\n        console.log(response);\n\n        let tmp_bookmarks = response.result\n        tmp_bookmarks.sort((a, b) => { return b.timestamp - a.timestamp })\n\n        this.setState({\n            bookmarks: tmp_bookmarks\n        })\n\n      });\n   }\n\n   getHistoryList = () => {\n    fetch('/getMongoDBList',\n      {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify({type: \"history\"\n        })\n      })\n      .then(response => response.json())\n      .then(response => {\n        //console.log(\"successfully generated Processed.wav file\")\n        console.log(response);\n\n        let tmp_history = response.result\n        tmp_history.sort((a, b) => { return b.timestamp - a.timestamp })\n\n        this.setState({\n            history: tmp_history\n        })\n\n      });\n   }\n\n\n   handleOnChange = (value, effect) => {\n\n   if(effect === \"distortion\"){\n    //THis SETSTATE!!! this.setstate  : distortion_value /= 100; //(only values between 0 and 1 allowed)\n    console.log('The Target Distortion Amount is' + this.state.distortion_value)\n    this.setState({distortion_value: value})\n    }\n    if(effect === \"reverb\"){\n    console.log('The Target Reverb Amount is' + this.state.reverb_value)\n    this.setState({reverb_value: value})\n    }\n    if(effect === \"volume\"){\n    console.log('The Target Volume Amount is' + this.state.volume_value)\n    this.setState({volume_value: value})\n    //this.state.sound.setVolume(this.state.value);\n    }\n    if(effect === \"lowpass\"){\n    console.log('The Target lowpass amount is' + this.state.lowpass_value)\n    this.setState({lowpass_value: value})\n    //this.state.sound.setVolume(this.state.value);\n    }\n     if(effect === \"highpass\"){\n    console.log('The Target highpass Amount is' + this.state.highpass_value)\n    this.setState({highpass_value: value})\n    //this.state.sound.setVolume(this.state.value);\n    }\n\n  //console.log(this.state.value)\n  }\n\n  postEffectsUpdate = (isReversed = null, volume_value=null, reverb_value=null, highpass_value=null, lowpass_value=null, distortion_value=null) => {\n    if(isReversed===null){ isReversed = this.state.isReversed}\n    if(volume_value===null){volume_value= this.state.volume_value}\n    if(distortion_value===null){distortion_value=this.state.distortion_value}\n    if(reverb_value===null){reverb_value=this.state.reverb_value}\n    if(highpass_value===null){highpass_value=this.state.highpass_value}\n    if(lowpass_value===null){lowpass_value=this.state.lowpass_value}\n\n\n    console.log(\"is Reversed Value bei PostEffectsUpdate\")\n    console.log(isReversed)\n\n    fetch('/effects',\n      {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify({data : \"Effect_Values\",\n                              volume_value: volume_value,\n                              distortion_value: distortion_value,\n                              reverb_value: reverb_value,\n                              highpass_value: highpass_value,\n                              lowpass_value: lowpass_value,\n                              isReversed: isReversed\n        })\n      })\n      .then(response => response.json())\n      .then(response => {\n        console.log(\"successfully generated Processed.wav file\")\n        //console.log(response.result)\n        //this.playStuff()\n      });\n\n  }\n\n  handleChangeComplete = (event, effect) => {\n\n    //Hier würde ich die Effekte Rüberschicken!\n    //Im backend erfahre ich dann wie viel von welchem Effekt gerade drin ist.\n    //Das Frontend schickt beim afterchange state einfach nur einen Post!\n\n    //console.log(effect)\n    //console.log(event)\n    if(effect === \"distortion\"){\n    //THis SETSTATE!!! this.setstate  : distortion_value /= 100; //(only values between 0 and 1 allowed)\n    console.log('The Target Distortion Amount is' + this.state.distortion_value)\n    //this.state.sound.setDistortion(this.state.value);\n    }\n    if(effect === \"reverb\"){\n    console.log('The Target Reverb Amount is' + this.state.reverb_value)\n    //this.state.sound.setReverb(this.state.value);\n    }\n    if(effect === \"volume\"){\n    console.log('The Target Volume Amount is' + this.state.volume_value)\n    //this.state.sound.setVolume(this.state.value);\n    }\n    if(effect === \"lowpass\"){\n    console.log('The Target Lowpass Amount is' + this.state.lowpass_value)\n    //this.state.sound.setVolume(this.state.value);\n    }\n    if(effect === \"highpass\"){\n    console.log('The Target Highpass Amount is' + this.state.highpass_value)\n    //this.state.sound.setVolume(this.state.value);\n    }\n    this.postEffectsUpdate()\n    this.setState({isBookmarked: false})\n  };\n\n  setStartTime = (startTime) => {\n      let sequencerProps = this.state.sequencerProps;\n      sequencerProps.startTime = startTime;\n      this.setState({sequencerProps: sequencerProps});\n  }\n\n  handleChangeAEVariance = (event)  => {\n  this.setState({ae_variance: event.target.value});\n  console.log(event.target.value)\n  }\n\n  setPastLapse = (pastLapse) => {\n      let sequencerProps = this.state.sequencerProps;\n      sequencerProps.pastLapse = pastLapse;\n      this.setState({sequencerProps: sequencerProps});\n  }\n\n  setBPM = (setBPM) => {\n      let sequencerProps = this.state.sequencerProps;\n      sequencerProps.setBPM = setBPM;\n      this.setState({sequencerProps: sequencerProps});\n  }\n\n\n  //<Dropdown.Item onClick={this.handleDropdownSpecGAN}>SpecGAN</Dropdown.Item>\n  //<Dropdown.Item onClick={this.handleDropdownMelGAN}>MelGAN</Dropdown.Item>\n  //<Dropdown.Item onClick={this.handleDropdownGoogleDDSP}>Google DDSP</Dropdown.Item>\n  //<Dropdown.Item onClick={this.handleDropdownCherry}>Cherry Picking</Dropdown.Item>\n\n  render() {\n    const isLoading = this.state.isLoading;\n    let bookmark_btn_class = this.state.isBookmarked ? \"dark\": \"success\";\n    let bookmark_btn_text = this.state.isBookmarked ? \"Bookmarked ⭐\": \"Bookmark\";\n    let reversed_btn_class = this.state.isReversed ? \"secondary\": \"success\";\n    let reversed_btn_text = this.state.isReversed ? \"Undo Reverse\": \"Reverse Sound\";\n    let loadingText = this.loadingTextArray[this.state.loadingTextIdx % this.loadingTextArray.length];\n\n    return (\n      <Container>\n        <GlobalHotKeys keyMap={this.keyMap} handlers={{\n          SPACE: this.handleHotKeySpace,\n          SEQUENCER: this.handleHotKeySequencer,\n          ENTER: this.handleHotKeyEnter\n          //ENTER: event => console.log(\"MMMMH.. you may Enter\")\n          }}/>\n        <div className=\"content\">\n          <Row>\n            <Col className=\"fennekcol\">\n              <h2>Select your Model and Instrument</h2>\n            </Col>\n          </Row>\n          <img src={Logo} className=\"ribbon\"/>\n          <Row>\n              <Col className=\"fennekcol\">\n                  <Dropdown>\n                    <Dropdown.Toggle block variant=\"primary\" id=\"dropdown-basic\">\n                     {this.state.model}\n                    </Dropdown.Toggle>\n                  <Dropdown.Menu align=\"right\" >\n                    <Dropdown.Item onClick={this.handleDropdownVAE}>Variational Autoencoder</Dropdown.Item>\n                    <Dropdown.Item onClick={this.handleSimilaritySearch}>Similarity Search</Dropdown.Item>\n                  </Dropdown.Menu>\n                  </Dropdown>\n               </Col>\n               {!this.state.isSimilaritySearch ?\n               <Col className=\"fennekcol\">\n                   <Dropdown>\n                    <Dropdown.Toggle block variant=\"primary\" id=\"dropdown-basic\">\n                     {this.state.model_instrument}\n                    </Dropdown.Toggle>\n                      <Dropdown.Menu>\n                        <Dropdown.Item id=\"Kick\" onClick={this.handleDropdownInstrument}>Kick</Dropdown.Item>\n                        <Dropdown.Item id=\"Snare\" onClick={this.handleDropdownInstrument}>Snare</Dropdown.Item>\n                        <Dropdown.Item id=\"Hihat\"onClick={this.handleDropdownInstrument}>Hi-Hat</Dropdown.Item>\n                        <Dropdown.Item id=\"Clap\" onClick={this.handleDropdownInstrument}>Clap</Dropdown.Item>\n                        <Dropdown.Item id=\"Crash\" onClick={this.handleDropdownInstrument}>Crash</Dropdown.Item>\n                        <Dropdown.Item id=\"Ride\" onClick={this.handleDropdownInstrument}>Ride</Dropdown.Item>\n                        <Dropdown.Item id=\"Conga\" onClick={this.handleDropdownInstrument}>Conga</Dropdown.Item>\n                        <Dropdown.Item id=\"Cowbell\" onClick={this.handleDropdownInstrument}>Cowbell</Dropdown.Item>\n                        <Dropdown.Item id=\"Rimshot\" onClick={this.handleDropdownInstrument}>Rimshot</Dropdown.Item>\n                        <Dropdown.Item id=\"Toms\" onClick={this.handleDropdownInstrument}>Toms</Dropdown.Item>\n                      </Dropdown.Menu>\n                  </Dropdown>\n                </Col>\n                : <div/>}\n          </Row>\n         <ParticlesBg color={this.state.particlesColor}  type=\"cobweb\" bg={true} num={30} />\n          <Row>\n          <Col className=\"fennekcol\">\n          {this.state.isSimilaritySearch ?\n          <React.Fragment>\n              <h2>Add your Input</h2>\n              {!this.state.isUploadSuccessful ?\n              <StyledDropzone onDrop={this.storeDropContent}>\n                {({getRootProps, getInputProps}) => (\n                  <section>\n                    <div {...getRootProps()}>\n                      <input {...getInputProps()} />\n                      <p>Drag 'n' drop some files here, or click to select files</p>\n                    </div>\n                  </section>\n                )}\n              </StyledDropzone>\n              :\n               <React.Fragment>\n              <p>Your Upload was successful! Go ahead and generate your file</p>\n              <Button\n                variant=\"primary\"\n                onClick={this.handleAnotherUpload}>\n                Upload Another File\n              </Button>\n              </React.Fragment>\n              }\n              </React.Fragment>\n          : <div/>}\n          </Col>\n          </Row>\n          {this.state.isLoadingModel ?\n          <div align=\"center\">\n          <p>{loadingText}</p>\n          <div class=\"spinner-border text-primary\" role=\"status\">\n          <span class=\"sr-only\">Loading...</span>\n          </div>\n          </div>\n          : <div/>}\n          {this.state.isReadyForGeneration ?\n          <React.Fragment>\n          <Row className=\"justify-content-md-center row\">\n           <Col className=\"fennekcol\">\n              {this.state.isGAN ?\n              <div/>\n              :\n              <React.Fragment>\n              <div align=\"center\" width=\"80%\">\n              <Chart\n                  options={this.state.options}\n                  series={this.state.series}\n                  dataPointSelection= {this.handleScatterClick}\n                  type=\"scatter\"\n                  width=\"600\"\n              />\n              <p>Variance</p>\n              <input\n                  id=\"typeinp\"\n                  type=\"range\"\n                  min=\"0\" max=\"5\"\n                  value={this.state.ae_variance}\n                  onChange={this.handleChangeAEVariance}\n                  step=\"1\"/>\n              </div>\n              <div align=\"center\">\n               <Button\n                variant=\"primary\"\n                onClick={this.playOriginalSound}>\n                Listen to Original Sound\n              </Button>\n              </div>\n              </React.Fragment>\n              }\n            </Col>\n          </Row>\n          <Row>\n            <Col className=\"fennekcol\">\n            <hr/>\n            <h2>Generate your Sound</h2>\n            <p class=\"text-secondary\">Hotkeys: 'Enter' to generate, 'Space' to Play  and 's' to Sequence Sound </p>\n              <Button\n                block\n                variant=\"primary\"\n                disabled={isLoading}\n                onClick={!isLoading ? this.onGenerate : null}>\n                { isLoading ? 'Generating...' : 'Generate Sound with AI' }\n              </Button>\n            </Col>\n          </Row>\n          <Row style={{marginTop:\"-10px\"}} className=\"justify-content-md-center row\">\n          <Accordion style={{\"text-align\": \"center\"}}>\n             <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                    Show Generation History\n                </Accordion.Toggle>\n                <Accordion.Collapse eventKey=\"0\">\n                <Row>\n                <div class=\"col-12\">\n                <ul class=\"list-group\">\n                    {this.state.history.map((history) => {\n                    //<div>{bookmark.name + \" \" + bookmark.date}</div>\n                    return <li id={history._id}\n                               class=\"list-group-item py-1 list-group-item-action\"\n                               onClick={this.getHistoryData}>{history.instrument}\n                               <Badge variant=\"warning\" style={{\"margin-left\": \"20px\"}}>{history.model}</Badge>\n                               <Badge variant=\"danger\" style={{\"margin-left\": \"20px\"}}>{getDateString(history.timestamp)}</Badge>\n                           </li>\n                    })}\n                </ul>\n                </div>\n                </Row>\n            </Accordion.Collapse>\n          </Accordion>\n          </Row>\n          </React.Fragment> : <div/>\n          }\n          {this.state.isReadyForPostprocessing ?\n          <React.Fragment>\n            <Col className=\"fennekcol\">\n            <hr/>\n            <h2>Postprocessing</h2>\n            </Col>\n          <Row className=\"justify-content-md-center row\" >\n            {\n              this.state.result ?\n                  <div>\n                  <Row>\n                    <Col className=\"effectcol\">\n                      <Button block variant={\"success\"} onClick={this.playStuff}>\n                        {this.state.playing ? \"Playing...\" :\"▶\"}\n                      </Button>\n                     </Col>\n                  </Row>\n                         <Row>\n                             <Col className=\"effectcol\">\n                             <EffectSlider\n                                value={this.state.distortion_value}\n                                effect=\"distortion\"\n                                sound={this.state.sound}\n                                handleOnChange={this.handleOnChange}\n                                handleChangeComplete={this.handleChangeComplete}\n                                orientation=\"horizontal\"\n                              />\n                              <Row className=\"justify-content-md-center row\">\n                              <p> Distortion </p>\n                              </Row>\n                              </Col>\n                              <Col className=\"effectcol\">\n                              <EffectSlider\n                                value={this.state.reverb_value}\n                                effect=\"reverb\"\n                                sound={this.state.sound}\n                                handleOnChange={this.handleOnChange}\n                                handleChangeComplete={this.handleChangeComplete}\n                                orientation=\"horizontal\"\n                              />\n                               <Row className=\"justify-content-md-center row\">\n                              <p> Reverb </p>\n                              </Row>\n                              </Col>\n                              <Col className=\"effectcol\">\n                              <EffectSlider\n                                value={this.state.volume_value}\n                                effect=\"volume\"\n                                sound={this.state.sound}\n                                handleOnChange={this.handleOnChange}\n                                handleChangeComplete={this.handleChangeComplete}\n                                orientation=\"horizontal\"\n                              />\n                               <Row className=\"justify-content-md-center row\">\n                              <p> Volume </p>\n                              </Row>\n                              </Col>\n                              <Col className=\"effectcol\">\n                              <EffectSlider\n                                value={this.state.lowpass_value}\n                                effect=\"lowpass\"\n                                sound={this.state.sound}\n                                handleOnChange={this.handleOnChange}\n                                handleChangeComplete={this.handleChangeComplete}\n                                orientation=\"horizontal\"\n                              />\n                               <Row className=\"justify-content-md-center row\">\n                              <p> Lowpass </p>\n                              </Row>\n                              </Col>\n                              <Col className=\"effectcol\">\n                              <EffectSlider\n                                value={this.state.highpass_value}\n                                effect=\"highpass\"\n                                sound={this.state.sound}\n                                handleOnChange={this.handleOnChange}\n                                handleChangeComplete={this.handleChangeComplete}\n                                orientation=\"horizontal\"\n                              />\n                               <Row className=\"justify-content-md-center row\">\n                              <p> Highpass </p>\n                              </Row>\n                              </Col>\n                         </Row>\n                            <Row>\n                    <Col className=\"effectcol\">\n                    <Button variant={\"success\"} onClick={this.handleRandom}>Random 🎲</Button>\n                    </Col>\n                    <Col className=\"effectcol\">\n                    <Button variant={reversed_btn_class} onClick={this.handleReverseSound}>{reversed_btn_text}</Button>\n                    </Col>\n                    <Col className=\"effectcol\">\n                    <Dropdown>\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                 Presets\n                </Dropdown.Toggle>\n              <Dropdown.Menu>\n                <Dropdown.Item id=\"Big Room\" onClick={this.handleDropdownPresets}>Big Room</Dropdown.Item>\n                <Dropdown.Item id=\"Small Room\" onClick={this.handleDropdownPresets}>Small Room</Dropdown.Item>\n                <Dropdown.Item id=\"Clipping\" onClick={this.handleDropdownPresets}>Clipping</Dropdown.Item>\n              </Dropdown.Menu>\n              </Dropdown>\n                    </Col>\n                    <Col className=\"effectcol\">\n                    <Button variant={bookmark_btn_class} onClick={this.handleBookmark}>{bookmark_btn_text}</Button>\n                    </Col>\n                    </Row>\n                  </div>\n                  :\n                  <div/>\n            }\n          </Row>\n          <Col className=\"fennekcol\">\n          <p class=\"text-secondary\">Your bookmarked sounds</p>\n          </Col>\n          <Row>\n            <div class=\"col-12\">\n                <ul class=\"list-group\">\n                    {this.state.bookmarks.map((bookmark) => {\n                    //<div>{bookmark.name + \" \" + bookmark.date}</div>\n                    return <li id={bookmark._id}\n                               class=\"list-group-item list-group-item-action\"\n                               onClick={this.getBookmarkData}>{bookmark.instrument}\n                               <Badge variant=\"warning\" style={{\"margin-left\": \"20px\"}}>{bookmark.model}</Badge>\n                               <Badge variant=\"danger\" style={{\"margin-left\": \"20px\"}}>{getDateString(bookmark.timestamp)}</Badge>\n                           </li>\n                    })}\n                </ul>\n          </div>\n          </Row>\n\n          <Row>\n          <Col className=\"fennekcol\">\n          <hr/>\n          <h2>Sound Visualizer</h2>\n          <Row className=\"justify-content-md-center row\">\n           <Button className=\"justify-content-md-center\" class=\"border border-primary\" variant={\"light\"} onClick={this.handleVisualization}><img src={RefreshLogo}/></Button>\n          </Row>\n          </Col>\n          </Row>\n          <Row>\n              <Col className=\"fennekcol\">\n                  <SoundVisualizer\n                    visualizations={this.state.visualizations}\n                  />\n              </Col>\n          </Row>\n          { this.state.result && this.state.result !== \"i\" ?\n            <React.Fragment>\n            <Row style={{\"margin-top\": \"30px\"}}>\n              <Col className=\"fennekcol\">\n                <hr/>\n                <h2>Sequencer</h2>\n                <Sequencer\n                    startTime={this.state.sequencerProps.startTime}\n                    pastLapsedTime={this.state.sequencerProps.pastLapsedTime}\n                    BPM={this.state.sequencerProps.setBPM}\n                    base64Sound={this.state.result}\n                    setStartTime={this.setStartTime}\n                    setPastLapse={this.setPastLapse}\n                    setBPM={this.setBPM}\n                />\n              </Col>\n              </Row>\n              <Row className=\"justify-content-md-center row\">\n                    <Button variant={\"primary\"} onClick={this.downloadStuff}>Download</Button>\n              </Row>\n              </React.Fragment>\n              :\n              null\n          }\n          </React.Fragment> : <div/>\n          }\n\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport ApexChart from 'apexcharts';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}